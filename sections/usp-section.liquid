{% comment %}
  USP Section
  Displays unique selling propositions in a horizontal banner format
  Features icons and text for key product benefits
{% endcomment %}

{% stylesheet %}
.usp-section {
  width: 100vw;
  margin-left: calc(-50vw + 50%);
  margin-right: calc(-50vw + 50%);
  background-color: var(--section-bg-color);
  padding-top: var(--section-padding-top);
  padding-bottom: var(--section-padding-bottom);
  border-top: 1px solid var(--border-color, #e5e7eb);
  border-bottom: 1px solid var(--border-color, #e5e7eb);
}

.usp-section__container {
  max-width: var(--container-max-width);
  margin: 0 auto;
  padding: 0 var(--container-padding);
}

.usp-section__list {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
  gap: 2rem;
  align-items: center;
}

.usp-section__item {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  gap: 1rem;
  padding: 1rem;
}

.usp-section__icon-wrapper {
  width: 4rem;
  height: 4rem;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.usp-section__icon {
  width: 2rem;
  height: 2rem;
  color: var(--icon-color, #000000);
}

.usp-section__icon svg {
  width: 100%;
  height: 100%;
  fill: currentColor;
}

.usp-section__text {
  font-size: 0.875rem;
  font-weight: var(--font-weight-medium);
  color: var(--color-text-primary);
  line-height: var(--line-height-normal);
  text-transform: uppercase;
  letter-spacing: 0.025em;
  max-width: 12rem;
}

/* Mobile Responsive */
@media screen and (max-width: 768px) {
  .usp-section {
    padding-top: var(--section-padding-top-mobile);
    padding-bottom: var(--section-padding-bottom-mobile);
  }
  
  .usp-section__list {
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }
  
  .usp-section__item {
    gap: 0.75rem;
    padding: 0.75rem;
  }
  
  .usp-section__icon-wrapper {
    width: 3.5rem;
    height: 3.5rem;
  }
  
  .usp-section__icon {
    width: 1.75rem;
    height: 1.75rem;
  }
  
  .usp-section__text {
    font-size: 0.75rem;
    max-width: 10rem;
  }
}

@media screen and (max-width: 600px) {
  .usp-section {
    padding-top: var(--section-padding-top-small);
    padding-bottom: var(--section-padding-bottom-small);
  }
  
  .usp-section__list {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .usp-section__item {
    flex-direction: row;
    text-align: left;
    justify-content: flex-start;
    gap: 1rem;
  }
  
  .usp-section__icon-wrapper {
    width: 3rem;
    height: 3rem;
  }
  
  .usp-section__icon {
    width: 1.5rem;
    height: 1.5rem;
  }
  
  .usp-section__text {
    font-size: 0.8rem;
    text-align: left;
    max-width: none;
  }
}
{% endstylesheet %}

<section class="usp-section" style="
  --section-bg-color: {{ section.settings.section_bg_color | default: '#ffffff' }};
  --section-padding-top: {{ section.settings.section_padding_top | default: 2 }}rem;
  --section-padding-bottom: {{ section.settings.section_padding_bottom | default: 2 }}rem;
  --section-padding-top-mobile: {{ section.settings.section_padding_top | default: 2 | times: 0.7 }}rem;
  --section-padding-bottom-mobile: {{ section.settings.section_padding_bottom | default: 2 | times: 0.7 }}rem;
  --section-padding-top-small: {{ section.settings.section_padding_top | default: 2 | times: 0.5 }}rem;
  --section-padding-bottom-small: {{ section.settings.section_padding_bottom | default: 2 | times: 0.5 }}rem;
  --border-color: {{ section.settings.border_color | default: '#e5e7eb' }};
  --icon-color: {{ section.settings.icon_color | default: '#000000' }};
  --icon-stroke-width: {{ section.settings.icon_stroke_width | default: 1 }};
" {{ section.shopify_attributes }}>
  <div class="usp-section__container">
    
    {% if section.blocks.size > 0 %}
      <div class="usp-section__list">
        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'usp_item' %}
              <div class="usp-section__item" {{ block.shopify_attributes }}>
                
                {% if block.settings.icon_name != blank %}
                  <div class="usp-section__icon-wrapper">
                    <div class="usp-section__icon">
                      {% assign icon_filename = block.settings.icon_name | append: '.svg' %}
                      <div class="usp-section__icon-svg" 
                           data-icon="{{ icon_filename | asset_url }}"
                           onerror="this.style.display='none'; this.nextElementSibling.style.display='block';">
                      </div>
                      <div class="usp-section__icon-fallback" style="display: none; width: 100%; height: 100%; align-items: center; justify-content: center; color: var(--icon-color, #000000); font-size: 12px; font-weight: bold;">
                        {{ block.settings.icon_name | slice: 0, 2 | upcase }}
                      </div>
                    </div>
                  </div>
                {% endif %}
                
                {% if block.settings.text != blank %}
                  <p class="usp-section__text">{{ block.settings.text }}</p>
                {% endif %}
                
              </div>
          {% endcase %}
        {% endfor %}
      </div>
    {% endif %}

  </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Load SVG icons and apply color styling
  const iconContainers = document.querySelectorAll('.usp-section__icon-svg');
  
  iconContainers.forEach(container => {
    const iconUrl = container.dataset.icon;
    const iconName = container.dataset.icon.split('/').pop().replace('.svg', '');
    
    fetch(iconUrl)
      .then(response => response.text())
      .then(svgContent => {
        // Replace the container with the SVG content
        container.innerHTML = svgContent;
        
        // Apply color styling to the SVG
        const svg = container.querySelector('svg');
        if (svg) {
          // Get the computed color from CSS variables
          const computedStyle = getComputedStyle(container.closest('.usp-section'));
          const iconColor = computedStyle.getPropertyValue('--icon-color') || '#000000';
          const strokeWidth = computedStyle.getPropertyValue('--icon-stroke-width') || '1';
          
          // Apply color and stroke to the SVG
          svg.style.color = iconColor;
          svg.style.stroke = 'currentColor';
          svg.style.strokeWidth = strokeWidth;
          svg.style.fill = 'none';
          svg.style.width = '100%';
          svg.style.height = '100%';
          
          // Apply styles to all paths in the SVG
          const paths = svg.querySelectorAll('path, circle, rect, line, polyline, polygon');
          paths.forEach(path => {
            path.style.stroke = iconColor;
            path.style.strokeWidth = strokeWidth;
            path.style.fill = 'none';
          });
        }
      })
      .catch(error => {
        console.log('SVG load failed for:', iconUrl, error);
        // Show fallback on error
        container.style.display = 'none';
        const fallback = container.nextElementSibling;
        if (fallback && fallback.classList.contains('usp-section__icon-fallback')) {
          fallback.style.display = 'flex';
        }
      });
  });
});
</script>

{% schema %}
{
  "name": "USP Section",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "section_bg_color",
      "label": "Section background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "border_color",
      "label": "Border color",
      "default": "#e5e7eb"
    },
    {
      "type": "color",
      "id": "icon_color",
      "label": "Icon color",
      "default": "#000000"
    },
    {
      "type": "range",
      "id": "icon_stroke_width",
      "label": "Icon stroke width",
      "min": 0.5,
      "max": 4,
      "step": 0.5,
      "default": 1,
      "unit": "px"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "label": "Top padding",
      "min": 0,
      "max": 4,
      "step": 0.5,
      "unit": "rem",
      "default": 2
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "label": "Bottom padding",
      "min": 0,
      "max": 4,
      "step": 0.5,
      "unit": "rem",
      "default": 2
    }
  ],
  "blocks": [
    {
      "type": "usp_item",
      "name": "âœ¨ USP Item",
      "settings": [
        {
          "type": "text",
          "id": "icon_name",
          "label": "SVG filename",
          "info": "Enter the SVG filename from your assets (without .svg extension)",
          "default": "diamond"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Pure Titanium"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "USP Section",
      "blocks": [
        {
          "type": "usp_item",
          "settings": {
            "icon_name": "star",
            "text": "Pure Titanium"
          }
        },
        {
          "type": "usp_item",
          "settings": {
            "icon_name": "shield",
            "text": "Lifetime Durability"
          }
        },
        {
          "type": "usp_item",
          "settings": {
            "icon_name": "dollar-sign",
            "text": "30-Day Money-Back Guarantee"
          }
        },
        {
          "type": "usp_item",
          "settings": {
            "icon_name": "check-circle",
            "text": "Antibacterial and BPA-Free"
          }
        }
      ]
    }
  ]
}
{% endschema %}
